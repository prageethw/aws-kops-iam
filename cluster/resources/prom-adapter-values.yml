# note this is adopter pointing istio prometheus I found some difference between this and helm installed one.
metricsRelistInterval: 90s
rules:
  default: false
  custom:
  - seriesQuery: 'nginx_ingress_controller_requests'
    resources:
      overrides:
        ingress: {resource: "ingress"}
        # Note: please try out changing exported_namespace to namespace if this does not work
        exported_namespace: {resource: "namespace"}
    name:
      as: "http_req_per_second"
    metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>)'
  - seriesQuery: 'nginx_ingress_controller_requests'
    resources:
      overrides:
        ingress: {resource: "ingress"}
        # Note: please try out changing exported_namespace to namespace if this does not work
        exported_namespace: {resource: "namespace"} # here prometheus results (for nginx_ingress_controller_requests metrics ) exported_namespace to be replace by k8s resource namespace.
    name:
      as: "http_req_per_second_per_replica"
    metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>) / sum(label_join(kube_deployment_status_replicas, "ingress", ",", "deployment")) by (<<.GroupBy>>)'
  # - seriesQuery: 'istio_requests_total'
  #   resources:
  #     overrides:
  #       destination_service_name: {resource: "service"}
  #       # Note: please try out changing exported_namespace to namespace if this does not work
  #       destination_workload_namespace: {resource: "namespace"} # here prometheus results (for nginx_ingress_controller_requests metrics ) exported_namespace to be replace by k8s resource namespace.
  #   name:
  #     as: "tps_service_requests"
  #   metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>,reporter="destination"}[1m]))/count(count(container_memory_usage_bytes{namespace="go-demo-7",pod_name=~"go-demo-7-primary.*"}) by (pod_name))'